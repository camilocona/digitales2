.global _start
_start:
    // Loads 0xC000_0000 into R1. Data memory returns 0xC000_0000 value
    // when address zero is read using LDR (dmem_to_test_peripherals.dat).
    SUB    R0, R15, R15
    LDR    R1, [R0, #0]    // Loads 0xC000_0000 into R1
Counter:    
    // Counts up to the value provided by the switches (0xC000_0000)
    // and writes it into the leds (0xC000_0004)
    SUB    R2, R15, R15
    MOV    R4, #1        // Initialize R4 to 1 for leftward LED sequence
Loop:
    LDR    R3, [R1]        // Read the switches

    // Customize the LED sequence here for 10 LEDs using bitwise operations
    STR    R2, [R1, #4]    // Rightward LEDs
    STR    R4, [R1, #8]    // Leftward LEDs

    // Rightward LED sequence
    LSL    R2, R2, #1     // Left shift R2 by 1 to double its value
    CMP    R2, #1024      // Check if rightward sequence exceeds 1024
    BEQ    ResetCounterR

    // Leftward LED sequence
    LSR    R4, R4, #1     // Right shift R4 by 1 to halve its value
    CMP    R4, #0         // Check if leftward sequence reaches 0
    BEQ    ResetCounterL

    B      Loop

ResetCounterR:
    MOV    R2, #1       // Reset rightward sequence to 1
    B      Loop

ResetCounterL:
    MOV    R4, #512     // Reset leftward sequence to 512
    B      Loop
